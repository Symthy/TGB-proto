// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// add models

model Profile {
  userId  Int     @id @map("user_id")
  name    String?
  detail  String?
  picture String?
  belongs String?
  user    User    @relation(fields: [userId], references: [id])

  @@map("profile")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  nickname String @db.VarChar(20)
  role     Role   @default(USER)

  Profile       Profile?
  UserTaskGroup UserTaskGroup[]

  @@map("user")
}

enum Role {
  USER
  READER
  ADMIN
}

model Task {
  id           Int      @id @default(autoincrement())
  title        String   @default("")
  content      String   @db.VarChar
  progress     Int      @default(0)
  estimateTime String   @default("-") @map("estimate_time")
  resultTime   String   @default("-") @map("result_time")
  status       Status   @default(WAITING)
  createdAt    DateTime @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  completedAt  DateTime @map("completed_at")

  taskGroup TaskGroup @relation(fields: [groupId], references: [id])
  groupId   Int       @unique

  TaskPerformance TaskPerformance?
  @@map("task")
}

model TaskPerformance {
  id               Int  @id @default(autoincrement())
  stepCount        Int? @map("step_count")
  codeReviewPoints Int? @map("code_review_points")

  task   Task @relation(fields: [taskId], references: [id])
  taskId Int  @unique
  @@map("task_performance")
}

model TaskGroup {
  id      Int     @id @default(autoincrement())
  name    String
  summary String?

  UserTaskGroup UserTaskGroup[]
  Task          Task[]

  @@map("task_group")
}

model UserTaskGroup {
  taskGroupId Int @map("task_group_id")
  userId      Int @map("user_id")

  taskGroup TaskGroup @relation(fields: [taskGroupId], references: [id])
  user      User      @relation(fields: [userId], references: [id])
  @@id([taskGroupId, userId])
}

enum Status {
  WAITING
  INPROGRESS
  COMPLETED
  PENDING
}
