// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// add models

model Profile {
  id      Int     @id @default(autoincrement())
  detail  String?
  picture String?
  belogs  String?
  user    User    @relation(fields: [userId], references: [id])
  userId  Int     @unique @map("user_id")

  @@map("profile")
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String
  name     String   @db.VarChar(20)
  role     Role     @default(USER)
  profile  Profile?

  UserTaskGroup UserTaskGroup[]
  @@map("user")
}

enum Role {
  USER
  READER
  ADMIN
}

model Task {
  id          Int      @id @default(autoincrement())
  title       String
  detail      String   @db.VarChar
  progress    Int
  estimate    String   @default("-")
  result      String   @default("-")
  status      Status
  createdAt   DateTime @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  completedAt DateTime @map("completed_at")

  taskGroup TaskGroup @relation(fields: [groupId], references: [id])
  groupId   Int       @unique
  @@map("task")
}

model TaskGroup {
  id      Int     @id @default(autoincrement())
  name    String
  summary String?

  UserTaskGroup UserTaskGroup[]
  Task          Task[]

  @@map("task_group")
}

model UserTaskGroup {
  taskGroupId Int @map("task_group_id")
  userId      Int @map("user_id")

  taskGroup TaskGroup @relation(fields: [taskGroupId], references: [id])
  user      User      @relation(fields: [userId], references: [id])
  @@id([taskGroupId, userId])
}

enum Status {
  WAITING
  INPROGRESS
  COMPLETED
  PENDING
  BACKLOG
}
